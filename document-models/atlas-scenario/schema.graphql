scalar Amount_Tokens
scalar EthereumAddress
scalar Amount_Percentage
scalar EmailAddress
scalar Date
scalar DateTime
scalar URL
scalar Amount_Money
scalar OLabel
scalar Currency
scalar PHID
scalar OID
type AtlasScenarioState {
  name: String! # Default value = ""
  docNo: String! 
  parent: PHID! # 
  content: String
  masterStatus: Status! # 
  globalTags: [GlobalTag!]!
  references: [PHID!]!
  provenance: URL
  notionId: String # verify if this can be changed to UUID type
  findings: Finding!
  additionalGuidance: String
}

  
type Finding {
  isAligned: Boolean! # True if aligned, false if misaligned
  comment: String # Optional context or explanation about the finding
}

enum Status {
  PLACEHOLDER
  PROVISIONAL # enables ecosystem participants to interact with the material in a practical context, resulting in valuable feedback or other data concerning the Document's appropriateness.
  APPROVED # material instance can be integrated into the Atlas
  DEFERRED
  ARCHIVED
  
}

enum GlobalTag {
    SCOPE_ADVISOR_,
    AVC_,
    CAIS_,
    ML___LOW_PRIORITY_,
    EXTERNAL_REFERENCE_,
    DAO_TOOLKIT_,
    ML___DEFER_,
    PURPOSE_SYSTEM_,
    NEWCHAIN_,
    ML___SUPPORT_DOCS_NEEDED_,
    TWO_STAGE_BRIDGE_,
    ECOSYSTEM_INTELLIGENCE_,
    RECURSIVE_IMPROVEMENT_,
    LEGACY_TERM___USE_APPROVED_,
}




# scenario

input UpdateScenarioInput {
  name: String
  parent: PHID! 
  content: String
  masterStatus: [Status!]!
  globalTags: [GlobalTag!]!
  references: [PHID!]!
  findings: UpdateFindingInput # Optional inclusion for modularity
  additionalGuidance: String
}


enum Status {
  PLACEHOLDER
  PROVISIONAL # enables ecosystem participants to interact with the material in a practical context, resulting in valuable feedback or other data concerning the Document's appropriateness.
  APPROVED # material instance can be integrated into the Atlas
  DEFERRED
  ARCHIVED
  
}

enum GlobalTag {
    SCOPE_ADVISOR_,
    AVC_,
    CAIS_,
    ML___LOW_PRIORITY_,
    EXTERNAL_REFERENCE_,
    DAO_TOOLKIT_,
    ML___DEFER_,
    PURPOSE_SYSTEM_,
    NEWCHAIN_,
    ML___SUPPORT_DOCS_NEEDED_,
    TWO_STAGE_BRIDGE_,
    ECOSYSTEM_INTELLIGENCE_,
    RECURSIVE_IMPROVEMENT_,
    LEGACY_TERM___USE_APPROVED_,
}


input UpdateFindingInput {
  isAligned: Boolean! # True if aligned, false if misaligned
  comment: String # Optional context or explanation about the finding
}
