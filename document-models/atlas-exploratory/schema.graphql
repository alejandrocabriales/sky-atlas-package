scalar Amount_Tokens
scalar EthereumAddress
scalar Amount_Percentage
scalar EmailAddress
scalar Date
scalar DateTime
scalar URL
scalar Amount_Money
scalar OLabel
scalar Currency
scalar PHID
scalar OID
type AtlasExploratoryState {
  name: String!
  docNo: String!
  parent: PHID!
  atlasType: AtlasType! ###
  content: String
  masterStatus: Status!
  globalTags: [GlobalTag!]!
  references: [PHID!]!
  provenance: URL
  notionId: String
  findings: Finding!
  additionalGuidance: String
}

type Finding {
  isAligned: Boolean!
  comment: String
}

enum AtlasType {
SCENARIO
SCENARIO_VARIATION
  
}
enum Status {
  PLACEHOLDER
  PROVISIONAL
  APPROVED
  DEFERRED
  ARCHIVED
}

enum GlobalTag {
  SCOPE_ADVISOR_
  AVC_
  CAIS_
  ML___LOW_PRIORITY_
  EXTERNAL_REFERENCE_
  DAO_TOOLKIT_
  ML___DEFER_
  PURPOSE_SYSTEM_
  NEWCHAIN_
  ML___SUPPORT_DOCS_NEEDED_
  TWO_STAGE_BRIDGE_
  ECOSYSTEM_INTELLIGENCE_
  RECURSIVE_IMPROVEMENT_
  LEGACY_TERM___USE_APPROVED_
}



# scenario

input UpdateScenarioInput {
  name: String
  parent: PHID! 
  content: String
  masterStatus: [Status!]
  globalTags: [String]
  references: [PHID!]
  findings: UpdateFindingInput # Optional inclusion for modularity
  additionalGuidance: String
}

input UpdateFindingInput {
  isAligned: Boolean! # True if aligned, false if misaligned
  comment: String # Optional context or explanation about the finding
}


enum AtlasType {
SCENARIO
SCENARIO_VARIATION
}

enum Status {
  PLACEHOLDER
  PROVISIONAL
  APPROVED
  DEFERRED
  ARCHIVED
}

enum GlobalTag {
  SCOPE_ADVISOR_
  AVC_
  CAIS_
  ML___LOW_PRIORITY_
  EXTERNAL_REFERENCE_
  DAO_TOOLKIT_
  ML___DEFER_
  PURPOSE_SYSTEM_
  NEWCHAIN_
  ML___SUPPORT_DOCS_NEEDED_
  TWO_STAGE_BRIDGE_
  ECOSYSTEM_INTELLIGENCE_
  RECURSIVE_IMPROVEMENT_
  LEGACY_TERM___USE_APPROVED_
}

input PopulateExploratoryInput {
  name: String!
  docNo: String!
  parent: PHID!
  atlasType: AtlasType!
  content: String
  masterStatus: Status!
  globalTags: [GlobalTag!]
  references: [PHID!]
  provenance: URL
  notionId: String
  findings: Finding!
  additionalGuidance: String
}


input UpdateFindingInput {
  isAligned: Boolean! # True if aligned, false if misaligned
  comment: String # Optional context or explanation about the finding
}


enum AtlasType {
SCENARIO
SCENARIO_VARIATION
}

enum Status {
  PLACEHOLDER
  PROVISIONAL
  APPROVED
  DEFERRED
  ARCHIVED
}

enum GlobalTag {
  SCOPE_ADVISOR_
  AVC_
  CAIS_
  ML___LOW_PRIORITY_
  EXTERNAL_REFERENCE_
  DAO_TOOLKIT_
  ML___DEFER_
  PURPOSE_SYSTEM_
  NEWCHAIN_
  ML___SUPPORT_DOCS_NEEDED_
  TWO_STAGE_BRIDGE_
  ECOSYSTEM_INTELLIGENCE_
  RECURSIVE_IMPROVEMENT_
  LEGACY_TERM___USE_APPROVED_
}